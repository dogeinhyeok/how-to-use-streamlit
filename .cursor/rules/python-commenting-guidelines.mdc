---
description: 
globs: 
alwaysApply: true
---
# 파이썬 주석 규칙 가이드

파이썬에서 주석을 작성할 때 **PEP 8** (스타일 가이드)과 **PEP 257** (Docstring 규약)을 따르는 것이 표준입니다. 이 가이드는 코드의 가독성과 일관성을 높이기 위한 지침을 제공합니다.

## 1. 일반 주석 규칙 (PEP 8 기반)

일반 주석은 코드에 대한 설명을 추가할 때 사용되며, `#` 기호로 작성됩니다.

### 규칙
- **위치**:
  - **인라인 주석**: 코드 오른쪽에 작성하며, 코드와 최소 **2칸 띄웁니다**.
    ```python
    x = x + 1  # x를 증가시킴 (권장)
    x = x + 1 # x를 증가시킴 (비추)
    ```
  - **블록 주석**: 코드 위에 작성하며, 설명하는 코드와 동일한 들여쓰기 수준을 유지합니다.
    ```python
    # 이 함수는 사용자 입력을 기반으로 데이터를 필터링합니다.
    def filter_data(input_value):
        pass
    ```

- **내용**:
  - 코드가 "무엇을" 하는지보다 "왜" 그렇게 작성되었는지 설명합니다.
  - 너무 당연한 주석은 피하세요.
    ```python
    x = 5  # x에 5를 할당 (불필요)
    # 입력값이 음수일 경우를 처리하기 위해 추가
    if input_value > 0:
        process_value(input_value)
    ```

- **길이**: 한 줄 주석은 **72자 이내**로 제한합니다. 길어지면 여러 줄로 나눕니다.
  ```python
  # 이 주석은 길이가 72자를 넘지 않도록 작성되었습니다.
  # 필요하면 이렇게 여러 줄로 나눠서 사용하세요.
  ```

- **블록 주석 형식**: 여러 줄 주석은 각 줄에 `#`을 붙이고 정렬합니다.
  ```python
  # 이 함수는 데이터를 처리합니다.
  # 입력값이 유효하지 않으면 예외를 발생시킵니다.
  def process_data(data):
      pass
  ```

---

## 2. Docstring 규칙 (PEP 257 기반)

Docstring은 모듈, 클래스, 함수 등의 설명을 위해 사용되며, 삼중 따옴표(`"""`)로 작성됩니다.

### 규칙
- **위치**: 모듈, 클래스, 함수 정의의 첫 줄에 작성합니다.
- **형식**:
  - **한 줄 Docstring**:
    ```python
    def add(a, b):
        """두 수를 더한 결과를 반환합니다."""
        return a + b
    ```
  - **여러 줄 Docstring**:
    ```python
    def calculate_total(items):
        """
        주어진 항목 리스트의 총합을 계산합니다.

        Args:
            items (list): 숫자 항목이 포함된 리스트

        Returns:
            float: 항목들의 합계

        Raises:
            TypeError: items가 리스트가 아닌 경우
        """
        return sum(items)
    ```

- **내용 규칙**:
  - 첫 줄은 기능에 대한 간결한 요약(한 문장으로 끝냄).
  - 세부 설명(인자, 반환값, 예외 등)은 구체적으로 작성.
  - 모듈 수준 Docstring은 파일 맨 위에 추가:
    ```python
    """이 모듈은 데이터 처리 유틸리티를 제공합니다."""
    ```

---

## 3. 추가 팁

- **언어**: 주석은 영어로 작성하는 경우가 많지만, 팀이 한국어 사용자라면 한국어도 적합합니다. **일관성**이 중요합니다.
- **업데이트**: 코드가 변경되면 주석도 함께 수정하세요. 오래된 주석은 혼란을 초래할 수 있습니다.
- **TODO 주석**: 작업할 항목을 표시할 때 사용합니다.
  ```python
  # TODO: 성능 최적화 필요
  ```

---

## 예제 코드

```python
"""학생 데이터를 관리하는 모듈입니다."""

class Student:
    """학생 정보를 저장하는 클래스입니다."""
    def __init__(self, name):
        self.name = name  # 학생 이름을 저장

    def get_name(self):
        """학생의 이름을 반환합니다.

        Returns:
            str: 학생 이름
        """
        return self.name

# 학생 수를 계산하는 함수
def count_students(students):
    return len(students)  # 리스트 길이를 반환
```

---

## 요약

- **일반 주석**: `#`으로 간결하고 명확하게 작성.
- **Docstring**: `"""`로 모듈, 클래스, 함수에 구조화된 설명 제공.
- PEP 8과 PEP 257을 준수하면 코드의 가독성과 유지보수성이 크게 향상됩니다.

---

이 문서를 참고하면 파이썬 주석을 체계적으로 작성할 수 있을 거예요. 추가로 궁금한 점 있으면 말씀해주세요!